<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SmilesGenerator Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SmilesGenerator class" /><meta name="System.Keywords" content="NCDK.Smiles.SmilesGenerator class" /><meta name="System.Keywords" content="SmilesGenerator class, about SmilesGenerator class" /><meta name="Microsoft.Help.F1" content="NCDK.Smiles.SmilesGenerator" /><meta name="Microsoft.Help.Id" content="T:NCDK.Smiles.SmilesGenerator" /><meta name="Description" content="Generate a SMILES {@cdk.cite WEI88, WEI89} string for a provided structure. The generator can produce several flavour of SMILES. generic - non-canonical SMILES string, different atom ordering produces different SMILES." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="NCDK.Smiles" /><meta name="file" content="T_NCDK_Smiles_SmilesGenerator" /><meta name="guid" content="T_NCDK_Smiles_SmilesGenerator" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">NCDK Chemistry Development Kit Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e2ff06cc-99b7-4f8b-95c5-53965548639f.htm" title="NCDK Chemistry Development Kit Class Library" tocid="roottoc">NCDK Chemistry Development Kit Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_NCDK_Smiles.htm" title="NCDK.Smiles" tocid="N_NCDK_Smiles">NCDK.Smiles</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_NCDK_Smiles_SmilesGenerator.htm" title="SmilesGenerator Class" tocid="T_NCDK_Smiles_SmilesGenerator">SmilesGenerator Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_NCDK_Smiles_SmilesGenerator__ctor.htm" title="SmilesGenerator Constructor " tocid="M_NCDK_Smiles_SmilesGenerator__ctor">SmilesGenerator Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_NCDK_Smiles_SmilesGenerator.htm" title="SmilesGenerator Methods" tocid="Methods_T_NCDK_Smiles_SmilesGenerator">SmilesGenerator Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>SmilesGenerator Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Generate a SMILES {@cdk.cite WEI88, WEI89} string for a provided structure.
             The generator can produce several <i>flavour</i> of SMILES.
             
             <ul><li>generic - non-canonical SMILES string, different atom ordering
                     produces different SMILES. No isotope or stereochemistry encoded.
                     </li><li>unique - canonical SMILES string, different atom ordering
                     produces the same* SMILES. No isotope or stereochemistry encoded.
                     </li><li>isomeric - non-canonical SMILES string, different atom ordering
                     produces different SMILES. Isotope and stereochemistry is encoded.
                     </li><li>absolute - canonical SMILES string, different atom ordering
                     produces the same SMILES. Isotope and stereochemistry is encoded.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST266BE5C7_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">NCDK.Smiles<span id="LST266BE5C7_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SmilesGenerator</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_NCDK_Smiles.htm">NCDK.Smiles</a><br />
    <strong>Assembly:</strong>
   NCDK (in NCDK.dll) Version: 1.0.0.0 (1.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">SmilesGenerator</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">SmilesGenerator</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator__ctor.htm">SmilesGenerator</a></td><td><div class="summary">
            Create the generic SMILES generator.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_Aromatic.htm">Aromatic</a></td><td><div class="summary">
            The generator should write aromatic (lower-case) SMILES. This option is
            not recommended as different parsers can interpret where bonds should be
            placed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_Create.htm">Create(IAtomContainer)</a></td><td><div class="summary">
            Generate SMILES for the provided <span class="parameter">molecule</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_Create_1.htm">Create(IAtomContainer, <span id="LST266BE5C7_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_2?cpp=array&lt;");</script>Int32<span id="LST266BE5C7_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
             Create a SMILES string and obtain the order which the atoms were
             written. The output order allows one to arrange auxiliary atom data in the
             order that a SMILES string will be read. A simple example is seen below
             where 2D coordinates are stored with a SMILES string. In reality a more
             compact binary encoding would be used instead of printing the coordinates
             as a string.
             </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_CreateAbsolute.htm">CreateAbsolute</a></td><td><div class="summary">
            Create a absolute SMILES generator. Unique SMILES uses the InChI to
            canonise SMILES and encodes isotope or stereo-chemistry. The InChI
            module is not a dependency of the SMILES module but should be present
            on the classpath when generation absolute SMILES.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_CreateReactionSMILES.htm">CreateReactionSMILES</a></td><td><div class="summary">
            Generate a SMILES for the given <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABAGCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABAGCDA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABAGCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Reaction</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABAGCDA");</script>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_CreateSMILES.htm">CreateSMILES(IAtomContainer)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Create a SMILES string for the provided molecule.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_CreateSMILES_1.htm">CreateSMILES(IReaction)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Create a SMILES string for the provided reaction.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_Generic.htm">Generic</a></td><td><div class="summary">
            Create a generator for generic SMILES. Generic SMILES are
            non-canonical and useful for storing information when it is not used
            as an index (i.e. unique keys). The generated SMILES is dependant on
            the input order of the atoms.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_Isomeric.htm">Isomeric</a></td><td><div class="summary">
            Convenience method for creating an isomeric generator. Isomeric SMILES
            are non-unique but contain isotope numbers (e.g. <span class="code">[13C]</span>) and
            stereo-chemistry.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_SetUseAromaticityFlag.htm">SetUseAromaticityFlag</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Indicates whether output should be an aromatic SMILES.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_Unique.htm">Unique</a></td><td><div class="summary">
            Create a unique SMILES generator. Unique SMILES use a fast canonisation
            algorithm but does not encode isotope or stereo-chemistry.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_NCDK_Smiles_SmilesGenerator_WithAtomClasses.htm">WithAtomClasses</a></td><td><div class="summary">
            Specifies that the generator should write atom classes in SMILES. Atom
            classes are provided by the {@link org.openscience.cdk.CDKConstants#ATOM_ATOM_MAPPING}
            property. This method returns a new SmilesGenerator to use.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection">
             A generator instance is created using one of the static methods, the SMILES
             are then created by invoking <a href="M_NCDK_Smiles_SmilesGenerator_Create.htm">Create(IAtomContainer)</a>.
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAIGBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAIGBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAIGBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">IAtomContainer  ethanol = ...;
SmilesGenerator sg      = SmilesGenerator.Generic();
<span class="highlight-keyword">string</span>          smi     = sg.Create(ethanol); <span class="highlight-comment">// CCO or OCC</span>

SmilesGenerator sg      = SmilesGenerator.Unique();
<span class="highlight-keyword">string</span>          smi     = sg.Create(ethanol); <span class="highlight-comment">// only CCO</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAIGBA");</script><p>
             The isomeric and absolute generator encode tetrahedral and double bond
             stereochemistry using <a href="T_NCDK_IStereoElement.htm">IStereoElement</a>s
             provided on the <a href="T_NCDK_IAtomContainer.htm">IAtomContainer</a>. If stereochemistry is not being
             written it may need to be determined from 2D/3D coordinates using <a href="T_NCDK_Stereo_StereoElementFactory.htm">StereoElementFactory</a>.</p><p>
             By default the generator will not write aromatic SMILES. Kekulé SMILES are
             generally preferred for compatibility and aromaticity can easily be
             reperceived. Modifying a generator to produce <a href="M_NCDK_Smiles_SmilesGenerator_Aromatic.htm">Aromatic<span id="LST266BE5C7_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> SMILES
             will use the <a href="P_NCDK_IMolecularEntity_IsAromatic.htm">IsAromatic</a> flags.
             These flags can be set manually or with the
             <a href="T_NCDK_Aromaticities_Aromaticity.htm">Aromaticity</a> utility.
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAFGBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAFGBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAFGBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">IAtomContainer  benzene = ...;

<span class="highlight-comment">// with no flags set the output is always kekule</span>
SmilesGenerator sg      = SmilesGenerator.Generic();
<span class="highlight-keyword">string</span>          smi     = sg.Create(benzene); <span class="highlight-comment">// C1=CC=CC=C1</span>

SmilesGenerator sg      = SmilesGenerator.Generic()
                                         .Aromatic();
<span class="highlight-keyword">string</span>          smi     = sg.Create(ethanol); <span class="highlight-comment">// C1=CC=CC=C1</span>

<span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> a <span class="highlight-keyword">in</span> benzene.Atoms)
    a.IsAromatic = <span class="highlight-keyword">true</span>;
<span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> b <span class="highlight-keyword">in</span> benzene.Bond())
    b.IsAromatic = <span class="highlight-keyword">true</span>;

<span class="highlight-comment">// with flags set, the aromatic generator encodes this information</span>
SmilesGenerator sg      = SmilesGenerator.Generic();
<span class="highlight-keyword">string</span>          smi     = sg.Create(benzene); <span class="highlight-comment">// C1=CC=CC=C1</span>

SmilesGenerator sg      = SmilesGenerator.Generic()
                                         .Aromatic();
<span class="highlight-keyword">string</span>          smi     = sg.Create(ethanol); <span class="highlight-comment">// c1ccccc1</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAFGBA");</script><p>
             By default atom classes are not written. Atom classes can be written but
             creating a generator <a href="M_NCDK_Smiles_SmilesGenerator_WithAtomClasses.htm">WithAtomClasses<span id="LST266BE5C7_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_5?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EADGBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EADGBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EADGBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">IAtomContainer  benzene = ...;

<span class="highlight-comment">// see CDKConstants for property key</span>
benzene.Atoms[<span class="highlight-number">3</span>]
       .SetProperty(ATOM_ATOM_MAPPING, <span class="highlight-number">42</span>);

SmilesGenerator sg      = SmilesGenerator.Generic();
<span class="highlight-keyword">string</span>          smi     = sg.Create(benzene); <span class="highlight-comment">// C1=CC=CC=C1</span>

SmilesGenerator sg      = SmilesGenerator.Generic()
                                         .WithAtomClasses();
<span class="highlight-keyword">string</span>          smi     = sg.Create(ethanol); <span class="highlight-comment">// C1=CC=[CH:42]C=C1</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EADGBA");</script><p>
             Auxiliary data can be stored with SMILES by knowing the output order of
             atoms. The following example demonstrates the storage of 2D coordinates.
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABGBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABGBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABGBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">IAtomContainer  mol = ...;
SmilesGenerator sg  = SmilesGenerator.Generic();

<span class="highlight-keyword">int</span>   n     = mol.Atoms.Count;
<span class="highlight-keyword">int</span>[] order = <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[n];

<span class="highlight-comment">// the order array is filled up as the SMILES is generated</span>
<span class="highlight-keyword">string</span> smi = sg.Create(mol, order);

<span class="highlight-comment">// load the coordinates array such that they are in the order the atoms</span>
<span class="highlight-comment">// are read when parsing the SMILES</span>
Vector2[] coords = <span class="highlight-keyword">new</span> Vector2[mol.Atoms.Count];
<span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; coords.Length; i++)
    coords[order[i]] = container.Atoms[i].Point2D;

<span class="highlight-comment">// SMILES string suffixed by the coordinates</span>
<span class="highlight-keyword">string</span> smi2d = smi + <span class="highlight-literal">" "</span> + Arrays.ToString(coords);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABGBA");</script><p>
             * the unique SMILES generation uses a fast equitable labelling procedure
               and as such there are some structures which may not be unique. The number
               of such structures is generally minimal.</p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_NCDK_Smiles.htm">NCDK.Smiles Namespace</a></div><div class="seeAlsoStyle"><a href="T_NCDK_Aromaticities_Aromaticity.htm">NCDK.Aromaticities<span id="LST266BE5C7_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Aromaticity</a></div><div class="seeAlsoStyle"><a href="T_NCDK_Stereo_StereoElementFactory.htm">NCDK.Stereo<span id="LST266BE5C7_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>StereoElementFactory</a></div><div class="seeAlsoStyle"><a href="T_NCDK_ITetrahedralChirality.htm">NCDK<span id="LST266BE5C7_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ITetrahedralChirality</a></div><div class="seeAlsoStyle"><a href="T_NCDK_IDoubleBondStereochemistry.htm">NCDK<span id="LST266BE5C7_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IDoubleBondStereochemistry</a></div><div class="seeAlsoStyle"><a href="P_NCDK_IMolecularEntity_IsAromatic.htm">IMolecularEntity<span id="LST266BE5C7_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IsAromatic</a></div><div class="seeAlsoStyle"><a href="T_NCDK_Smiles_SmilesParser.htm">NCDK.Smiles<span id="LST266BE5C7_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266BE5C7_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SmilesParser</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 2016-2017 Kazuya Ujihara</p> </div></body></html>